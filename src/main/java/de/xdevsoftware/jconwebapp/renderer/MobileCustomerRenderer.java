
package de.xdevsoftware.jconwebapp.renderer;

import com.flowingcode.vaadin.addons.ironicons.ImageIcons;
import com.rapidclipse.framework.server.data.renderer.RenderedComponent;
import com.rapidclipse.framework.server.ui.UIUtils;
import com.vaadin.flow.component.ClickEvent;
import com.vaadin.flow.component.ComponentEvent;
import com.vaadin.flow.component.ComponentEventListener;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.button.ButtonVariant;
import com.vaadin.flow.component.html.Label;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;

import de.xdevsoftware.jconwebapp.model.Customer;
import de.xdevsoftware.jconwebapp.ui.dialog.CustomerEditDialog;
import de.xdevsoftware.jconwebapp.ui.mobile.CustomerMobileView;


public class MobileCustomerRenderer extends HorizontalLayout implements RenderedComponent<Customer>
{
	private Customer selectedCustomer;
	
	public MobileCustomerRenderer()
	{
		super();
		this.initUI();
	}
	
	@Override
	public void renderComponent(final Customer customer)
	{
		this.selectedCustomer = customer;
		
		this.lblFirstname.setText(customer.getFirstname() + " " + customer.getLastname());
		this.lblEmail.setText(customer.getEmail());
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #btnEdit}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void btnEdit_onClick(final ClickEvent<Button> event)
	{
		new CustomerEditDialog(this.selectedCustomer)
			.onOkSubmit(() -> {
				final CustomerMobileView mobileView = UIUtils.getNextParent(this, CustomerMobileView.class);
				mobileView.loadData();
			})
			.open();
	}
	
	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.verticalLayout  = new VerticalLayout();
		this.lblFirstname    = new Label();
		this.lblEmail        = new Label();
		this.verticalLayout2 = new VerticalLayout();
		this.btnEdit         = new Button();

		this.setSpacing(false);
		this.verticalLayout.setSpacing(false);
		this.lblFirstname.setText("Label");
		this.lblFirstname.getStyle().set("font-weight", "bold");
		this.lblEmail.setText("Label");
		this.btnEdit.addThemeVariants(ButtonVariant.LUMO_SMALL, ButtonVariant.LUMO_PRIMARY);
		this.btnEdit.setIcon(ImageIcons.EDIT.create());

		this.lblFirstname.setSizeUndefined();
		this.lblEmail.setSizeUndefined();
		this.verticalLayout.add(this.lblFirstname, this.lblEmail);
		this.btnEdit.setSizeUndefined();
		this.verticalLayout2.add(this.btnEdit);
		this.verticalLayout.setWidthFull();
		this.verticalLayout.setHeight(null);
		this.verticalLayout2.setSizeUndefined();
		this.add(this.verticalLayout, this.verticalLayout2);
		this.setWidthFull();
		this.setHeight(null);

		this.btnEdit.addClickListener(this::btnEdit_onClick);
	} // </generated-code>

	// <generated-code name="variables">
	private Button         btnEdit;
	private VerticalLayout verticalLayout, verticalLayout2;
	private Label          lblFirstname, lblEmail;
	// </generated-code>

}
